const fs = require('fs')
const path = require('path')
const fantasticon = require('fantasticon')
const codepointsSource = require('./node_modules/bootstrap-icons/font/bootstrap-icons.json')

const iconSourcePath = path.join(
  __dirname,
  'fontSources',
  'bootstrap-icons',
  'svgs'
)

const cssOutputPath = path.join(__dirname, 'styles', 'bootstrapIconsSubset.css')
const woffOutputPath = path.join(__dirname, 'public', 'bootstrap-icons.woff')
const tsOutputPath = path.join(
  __dirname,
  'components',
  'ui',
  'icon',
  'types.ts'
)

const files = fs.readdirSync(iconSourcePath)
const iconNames = files.map((item) => item.replace('.svg', ''))
const codepoints = iconNames.reduce((acc, iconName) => {
  acc[iconName] = codepointsSource[iconName]
  return acc
}, {})

const config = {
  inputDir: iconSourcePath,
  outputDir: path.join(__dirname, 'public'),
  fontTypes: ['woff'],
  assetTypes: ['css', 'ts'],
  name: 'bootstrap-icons',
  codepoints: codepoints,
  prefix: 'bi',
  selector: '.bi',
  templates: {
    css: path.join(
      __dirname,
      'fontSources',
      'bootstrap-icons',
      'iconCssTemplate.hbs'
    ),
  },
  formatOptions: {
    ts: {
      types: ['enum'],
      singleQuotes: true,
    },
  },
  pathOptions: {
    css: cssOutputPath,
    woff: woffOutputPath,
    ts: tsOutputPath,
  },
}

const autoGeneratedComment =
  '/* This file is autogenerated with fantasticon via `yarn subsetIcons` */'

fantasticon.generateFonts(config).then(({ assetsOut }) => {
  const outputCss = assetsOut.css
  // correct css font src path
  const cssCorrected = outputCss.replace('url("./', 'url("/')
  const cssFinal = autoGeneratedComment + '\n' + cssCorrected
  fs.writeFileSync(cssOutputPath, cssFinal)

  const outputTs = assetsOut.ts
  const tsFinal = autoGeneratedComment + '\n' + outputTs
  fs.writeFileSync(tsOutputPath, tsFinal)
})
